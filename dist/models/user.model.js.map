{"version":3,"sources":["../../src/models/user.model.ts"],"sourcesContent":["import { Sequelize, DataTypes, Model, Optional } from 'sequelize';\nimport { User } from '@interfaces/users.interface';\n\nexport type UserCreationAttributes = Optional<User, 'id' | 'name' | 'email' | 'password' | 'phone' | 'profile_image'>;\nconst PROTECTED_ATTRIBUTES = ['password'];\n\nexport class UserModel extends Model<User, UserCreationAttributes> implements User {\n  public id: number;\n  public profile_image: string;\n  public name: string;\n  public email: string;\n  public phone: string;\n  public password: string;\n  public sign_in_method: number;\n  public google_id: string;\n\n  public readonly createdAt!: Date;\n  public readonly updatedAt!: Date;\n\n  toJSON() {\n    // hide protected fields\n    const attributes = Object.assign({}, this.get());\n    for (const a of PROTECTED_ATTRIBUTES) {\n      delete attributes[a];\n    }\n    return attributes;\n  }\n}\n\nexport default function (sequelize: Sequelize): typeof UserModel {\n  UserModel.init(\n    {\n      id: {\n        autoIncrement: true,\n        primaryKey: true,\n        type: DataTypes.INTEGER,\n      },\n      profile_image: {\n        allowNull: true,\n        type: DataTypes.STRING(45),\n      },\n      name: {\n        allowNull: false,\n        type: DataTypes.STRING(45),\n      },\n      email: {\n        allowNull: true,\n        type: DataTypes.STRING(45),\n      },\n      phone: {\n        allowNull: true,\n        type: DataTypes.STRING(45),\n      },\n      password: {\n        allowNull: true,\n        type: DataTypes.STRING(255),\n      },\n      sign_in_method: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      google_id: {\n        allowNull: true,\n        type: DataTypes.TEXT,\n      },\n    },\n    {\n      tableName: 'users',\n      sequelize,\n    },\n  );\n\n  return UserModel;\n}\n"],"names":["UserModel","PROTECTED_ATTRIBUTES","Model","toJSON","attributes","Object","assign","get","a","id","profile_image","name","email","phone","password","sign_in_method","google_id","createdAt","updatedAt","sequelize","init","autoIncrement","primaryKey","type","DataTypes","INTEGER","allowNull","STRING","TEXT","tableName"],"mappings":";;;;;;;;;;;IAMaA,SAAS;eAATA;;IAuBb,OA4CC;eA5CD;;;2BA7BsD;;;;;;;;;;;;;;AAItD,MAAMC,uBAAuB;IAAC;CAAW;AAElC,IAAA,AAAMD,YAAN,MAAMA,kBAAkBE,gBAAK;IAalCC,SAAS;QAEP,MAAMC,aAAaC,OAAOC,MAAM,CAAC,CAAC,GAAG,IAAI,CAACC,GAAG;QAC7C,KAAK,MAAMC,KAAKP,qBAAsB;YACpC,OAAOG,UAAU,CAACI,EAAE;QACtB;QACA,OAAOJ;IACT;;;QAnBA,uBAAOK,MAAP,KAAA;QACA,uBAAOC,iBAAP,KAAA;QACA,uBAAOC,QAAP,KAAA;QACA,uBAAOC,SAAP,KAAA;QACA,uBAAOC,SAAP,KAAA;QACA,uBAAOC,YAAP,KAAA;QACA,uBAAOC,kBAAP,KAAA;QACA,uBAAOC,aAAP,KAAA;QAEA,uBAAgBC,aAAhB,KAAA;QACA,uBAAgBC,aAAhB,KAAA;;AAUF;AAEe,SAAf,SAAyBC,SAAoB;IAC3CnB,UAAUoB,IAAI,CACZ;QACEX,IAAI;YACFY,eAAe;YACfC,YAAY;YACZC,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAf,eAAe;YACbgB,WAAW;YACXH,MAAMC,oBAAS,CAACG,MAAM,CAAC;QACzB;QACAhB,MAAM;YACJe,WAAW;YACXH,MAAMC,oBAAS,CAACG,MAAM,CAAC;QACzB;QACAf,OAAO;YACLc,WAAW;YACXH,MAAMC,oBAAS,CAACG,MAAM,CAAC;QACzB;QACAd,OAAO;YACLa,WAAW;YACXH,MAAMC,oBAAS,CAACG,MAAM,CAAC;QACzB;QACAb,UAAU;YACRY,WAAW;YACXH,MAAMC,oBAAS,CAACG,MAAM,CAAC;QACzB;QACAZ,gBAAgB;YACdW,WAAW;YACXH,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAT,WAAW;YACTU,WAAW;YACXH,MAAMC,oBAAS,CAACI,IAAI;QACtB;IACF,GACA;QACEC,WAAW;QACXV;IACF;IAGF,OAAOnB;AACT"}