{"version":3,"sources":["../../src/database/index.ts"],"sourcesContent":["import Sequelize from 'sequelize';\nimport { NODE_ENV, DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_DATABASE } from '@config';\nimport UserModel from '@/models/user.model';\nimport { logger } from '@utils/logger';\nimport ChatModel from '@/models/chat.model';\nimport MessageModel from '@/models/message.model';\n\nconst sequelize = new Sequelize.Sequelize(DB_DATABASE, DB_USER, DB_PASSWORD, {\n  dialect: 'mysql',\n  host: DB_HOST,\n  port: DB_PORT,\n  timezone: '+09:00',\n  define: {\n    charset: 'utf8mb4',\n    collate: 'utf8mb4_general_ci',\n    underscored: true,\n    freezeTableName: true,\n  },\n  pool: {\n    min: 0,\n    max: 5,\n  },\n  logQueryParameters: NODE_ENV === 'development',\n  logging: (query, time) => {\n    // logger.info(time + 'ms' + ' ' + query);\n  },\n  benchmark: true,\n});\n\nsequelize.authenticate();\n\nexport const DB = {\n  Users: UserModel(sequelize),\n  Chats: ChatModel(sequelize),\n  Messages: MessageModel(sequelize),\n  sequelize, // connection instance (RAW queries)\n  Sequelize, // library\n};\n"],"names":["DB","sequelize","Sequelize","DB_DATABASE","DB_USER","DB_PASSWORD","dialect","host","DB_HOST","port","DB_PORT","timezone","define","charset","collate","underscored","freezeTableName","pool","min","max","logQueryParameters","NODE_ENV","logging","query","time","benchmark","authenticate","Users","UserModel","Chats","ChatModel","Messages","MessageModel"],"mappings":";;;;+BA+BaA;;;eAAAA;;;oDA/BS;wBACwD;oDACxD;oDAEA;uDACG;;;;;;AAEzB,MAAMC,YAAY,IAAIC,kBAAS,CAACA,SAAS,CAACC,mBAAW,EAAEC,eAAO,EAAEC,mBAAW,EAAE;IAC3EC,SAAS;IACTC,MAAMC,eAAO;IACbC,MAAMC,eAAO;IACbC,UAAU;IACVC,QAAQ;QACNC,SAAS;QACTC,SAAS;QACTC,aAAa;QACbC,iBAAiB;IACnB;IACAC,MAAM;QACJC,KAAK;QACLC,KAAK;IACP;IACAC,oBAAoBC,gBAAQ,KAAK;IACjCC,SAAS,CAACC,OAAOC,QAEjB;IACAC,WAAW;AACb;AAEAxB,UAAUyB,YAAY;AAEf,MAAM1B,KAAK;IAChB2B,OAAOC,IAAAA,kBAAS,EAAC3B;IACjB4B,OAAOC,IAAAA,kBAAS,EAAC7B;IACjB8B,UAAUC,IAAAA,qBAAY,EAAC/B;IACvBA;IACAC,WAAAA,kBAAS;AACX"}