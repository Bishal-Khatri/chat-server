{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Container } from 'typedi';\nimport { CreateUserDto, LoginUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport { RequestWithUser } from '@interfaces/auth.interface';\nimport { AuthService, createToken } from '@services/auth.service';\nimport axios from 'axios';\nimport { UserModel } from '@/models/user.model';\nimport { compare, hash } from 'bcrypt';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport jwt from 'jsonwebtoken';\nimport { SECRET_KEY } from '@config';\nimport { SignInMethod } from '@/constants';\n\nexport class AuthController {\n  public auth = Container.get(AuthService);\n\n  public signUp = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: CreateUserDto = req.body;\n\n      const signUpUserData: User = await this.auth.signup(userData);\n\n      const { tokenData, findUser } = await this.auth.login(userData);\n\n      res.status(200).json({\n        token: tokenData,\n        data: findUser,\n        message: 'login',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logIn = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: LoginUserDto = req.body;\n\n      const { tokenData, findUser } = await this.auth.login(userData);\n\n      res.status(200).json({\n        token: tokenData,\n        data: findUser,\n        message: 'login success',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public googleLogIn = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const code = req.body.code;\n\n      const payload = {\n        code,\n        client_id: '198239904766-eijfbnkvcs5ni21o8ecncnt93feeklbv.apps.googleusercontent.com',\n        client_secret: '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',\n        redirect_uri: 'postmessage',\n        grant_type: 'authorization_code',\n      };\n\n      const response = await axios.post('https://oauth2.googleapis.com/token', payload);\n\n      const accessToken = response.data.access_token;\n\n      const userResponse = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      const { tokenData, findUser } = await this.auth.googleLogin(userResponse.data);\n\n      res.status(200).json({\n        token: tokenData,\n        data: findUser,\n        message: 'login',\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  public authUser = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    try {\n      const userData: User = req.user;\n\n      res.status(200).json({\n        data: userData,\n        message: 'authUser',\n      });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logOut = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    try {\n      const userData: User = req.user;\n      const logOutUserData: User = await this.auth.logout(userData);\n\n      res.status(200).json({ data: logOutUserData, message: 'logout' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"],"names":["AuthController","auth","Container","get","AuthService","signUp","req","res","next","userData","body","signUpUserData","signup","tokenData","findUser","login","status","json","token","data","message","error","logIn","googleLogIn","code","payload","client_id","client_secret","redirect_uri","grant_type","response","axios","post","accessToken","access_token","userResponse","headers","Authorization","googleLogin","console","log","authUser","user","logOut","logOutUserData","logout"],"mappings":";;;;+BAcaA;;;eAAAA;;;wBAba;6BAIe;gDACvB;;;;;;;;;;;;;;;;;;;AAQX,IAAA,AAAMA,iBAAN,MAAMA;;QACX,uBAAOC,QAAOC,iBAAS,CAACC,GAAG,CAACC,wBAAW;QAEvC,uBAAOC,UAAS,OAAOC,KAAcC,KAAeC;YAClD,IAAI;gBACF,MAAMC,WAA0BH,IAAII,IAAI;gBAExC,MAAMC,iBAAuB,MAAM,IAAI,CAACV,IAAI,CAACW,MAAM,CAACH;gBAEpD,MAAM,EAAEI,SAAS,EAAEC,QAAQ,EAAE,GAAG,MAAM,IAAI,CAACb,IAAI,CAACc,KAAK,CAACN;gBAEtDF,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,OAAOL;oBACPM,MAAML;oBACNM,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdb,KAAKa;YACP;QACF;QAEA,uBAAOC,SAAQ,OAAOhB,KAAcC,KAAeC;YACjD,IAAI;gBACF,MAAMC,WAAyBH,IAAII,IAAI;gBAEvC,MAAM,EAAEG,SAAS,EAAEC,QAAQ,EAAE,GAAG,MAAM,IAAI,CAACb,IAAI,CAACc,KAAK,CAACN;gBAEtDF,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,OAAOL;oBACPM,MAAML;oBACNM,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdb,KAAKa;YACP;QACF;QAEA,uBAAOE,eAAc,OAAOjB,KAAcC,KAAeC;YACvD,IAAI;gBACF,MAAMgB,OAAOlB,IAAII,IAAI,CAACc,IAAI;gBAE1B,MAAMC,UAAU;oBACdD;oBACAE,WAAW;oBACXC,eAAe;oBACfC,cAAc;oBACdC,YAAY;gBACd;gBAEA,MAAMC,WAAW,MAAMC,cAAK,CAACC,IAAI,CAAC,uCAAuCP;gBAEzE,MAAMQ,cAAcH,SAASX,IAAI,CAACe,YAAY;gBAE9C,MAAMC,eAAe,MAAMJ,cAAK,CAAC5B,GAAG,CAAC,iDAAiD;oBACpFiC,SAAS;wBACPC,eAAe,CAAC,OAAO,EAAEJ,YAAY,CAAC;oBACxC;gBACF;gBAEA,MAAM,EAAEpB,SAAS,EAAEC,QAAQ,EAAE,GAAG,MAAM,IAAI,CAACb,IAAI,CAACqC,WAAW,CAACH,aAAahB,IAAI;gBAE7EZ,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBC,OAAOL;oBACPM,MAAML;oBACNM,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdkB,QAAQC,GAAG,CAACnB,MAAMD,OAAO;YAC3B;QACF;QAEA,uBAAOqB,YAAW,OAAOnC,KAAsBC,KAAeC;YAC5D,IAAI;gBACF,MAAMC,WAAiBH,IAAIoC,IAAI;gBAE/BnC,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBACnBE,MAAMV;oBACNW,SAAS;gBACX;YACF,EAAE,OAAOC,OAAO;gBACdb,KAAKa;YACP;QACF;QAEA,uBAAOsB,UAAS,OAAOrC,KAAsBC,KAAeC;YAC1D,IAAI;gBACF,MAAMC,WAAiBH,IAAIoC,IAAI;gBAC/B,MAAME,iBAAuB,MAAM,IAAI,CAAC3C,IAAI,CAAC4C,MAAM,CAACpC;gBAEpDF,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEE,MAAMyB;oBAAgBxB,SAAS;gBAAS;YACjE,EAAE,OAAOC,OAAO;gBACdb,KAAKa;YACP;QACF;;AACF"}